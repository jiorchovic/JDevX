package model;

import oracle.jbo.Key;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed May 10 10:51:39 CDT 2023
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CategoriasEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Categoriaid {
            public Object get(CategoriasEOImpl obj) {
                return obj.getCategoriaid();
            }

            public void put(CategoriasEOImpl obj, Object value) {
                obj.setCategoriaid((Number)value);
            }
        }
        ,
        Nombrecat {
            public Object get(CategoriasEOImpl obj) {
                return obj.getNombrecat();
            }

            public void put(CategoriasEOImpl obj, Object value) {
                obj.setNombrecat((String)value);
            }
        }
        ,
        CategoriasVO1 {
            public Object get(CategoriasEOImpl obj) {
                return obj.getCategoriasVO1();
            }

            public void put(CategoriasEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(CategoriasEOImpl object);

        public abstract void put(CategoriasEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int CATEGORIAID = AttributesEnum.Categoriaid.index();
    public static final int NOMBRECAT = AttributesEnum.Nombrecat.index();
    public static final int CATEGORIASVO1 = AttributesEnum.CategoriasVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CategoriasEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.CategoriasEO");
    }

    /**
     * Gets the attribute value for Categoriaid, using the alias name Categoriaid.
     * @return the Categoriaid
     */
    public Number getCategoriaid() {
        return (Number)getAttributeInternal(CATEGORIAID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Categoriaid.
     * @param value value to set the Categoriaid
     */
    public void setCategoriaid(Number value) {
        setAttributeInternal(CATEGORIAID, value);
    }

    /**
     * Gets the attribute value for Nombrecat, using the alias name Nombrecat.
     * @return the Nombrecat
     */
    public String getNombrecat() {
        return (String)getAttributeInternal(NOMBRECAT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Nombrecat.
     * @param value value to set the Nombrecat
     */
    public void setNombrecat(String value) {
        setAttributeInternal(NOMBRECAT, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CategoriasVO1.
     */
    public RowSet getCategoriasVO1() {
        return (RowSet)getAttributeInternal(CATEGORIASVO1);
    }

    /**
     * @param categoriaid key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number categoriaid) {
        return new Key(new Object[]{categoriaid});
    }

}
