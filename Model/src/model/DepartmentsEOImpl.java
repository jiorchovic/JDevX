package model;

import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jun 01 13:06:18 CDT 2023
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DepartmentsEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        DepartmentId {
            public Object get(DepartmentsEOImpl obj) {
                return obj.getDepartmentId();
            }

            public void put(DepartmentsEOImpl obj, Object value) {
                obj.setDepartmentId((Long)value);
            }
        }
        ,
        DepartmentName {
            public Object get(DepartmentsEOImpl obj) {
                return obj.getDepartmentName();
            }

            public void put(DepartmentsEOImpl obj, Object value) {
                obj.setDepartmentName((String)value);
            }
        }
        ,
        ManagerId {
            public Object get(DepartmentsEOImpl obj) {
                return obj.getManagerId();
            }

            public void put(DepartmentsEOImpl obj, Object value) {
                obj.setManagerId((Number)value);
            }
        }
        ,
        LocationId {
            public Object get(DepartmentsEOImpl obj) {
                return obj.getLocationId();
            }

            public void put(DepartmentsEOImpl obj, Object value) {
                obj.setLocationId((Number)value);
            }
        }
        ,
        LocacionesEO {
            public Object get(DepartmentsEOImpl obj) {
                return obj.getLocacionesEO();
            }

            public void put(DepartmentsEOImpl obj, Object value) {
                obj.setLocacionesEO((EntityImpl)value);
            }
        }
        ,
        EmployeesEO {
            public Object get(DepartmentsEOImpl obj) {
                return obj.getEmployeesEO();
            }

            public void put(DepartmentsEOImpl obj, Object value) {
                obj.setEmployeesEO((EmployeesEOImpl)value);
            }
        }
        ,
        EmployeesEO1 {
            public Object get(DepartmentsEOImpl obj) {
                return obj.getEmployeesEO1();
            }

            public void put(DepartmentsEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(DepartmentsEOImpl object);

        public abstract void put(DepartmentsEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int DEPARTMENTID = AttributesEnum.DepartmentId.index();
    public static final int DEPARTMENTNAME = AttributesEnum.DepartmentName.index();
    public static final int MANAGERID = AttributesEnum.ManagerId.index();
    public static final int LOCATIONID = AttributesEnum.LocationId.index();
    public static final int LOCACIONESEO = AttributesEnum.LocacionesEO.index();
    public static final int EMPLOYEESEO = AttributesEnum.EmployeesEO.index();
    public static final int EMPLOYEESEO1 = AttributesEnum.EmployeesEO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public DepartmentsEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.DepartmentsEO");
    }

    /**
     * Gets the attribute value for DepartmentId, using the alias name DepartmentId.
     * @return the DepartmentId
     */
    public Long getDepartmentId() {
        return (Long)getAttributeInternal(DEPARTMENTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DepartmentId.
     * @param value value to set the DepartmentId
     */
    public void setDepartmentId(Long value) {
        setAttributeInternal(DEPARTMENTID, value);
    }

    /**
     * Gets the attribute value for DepartmentName, using the alias name DepartmentName.
     * @return the DepartmentName
     */
    public String getDepartmentName() {
        return (String)getAttributeInternal(DEPARTMENTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for DepartmentName.
     * @param value value to set the DepartmentName
     */
    public void setDepartmentName(String value) {
        setAttributeInternal(DEPARTMENTNAME, value);
    }

    /**
     * Gets the attribute value for ManagerId, using the alias name ManagerId.
     * @return the ManagerId
     */
    public Number getManagerId() {
        return (Number)getAttributeInternal(MANAGERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ManagerId.
     * @param value value to set the ManagerId
     */
    public void setManagerId(Number value) {
        setAttributeInternal(MANAGERID, value);
    }

    /**
     * Gets the attribute value for LocationId, using the alias name LocationId.
     * @return the LocationId
     */
    public Number getLocationId() {
        return (Number)getAttributeInternal(LOCATIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for LocationId.
     * @param value value to set the LocationId
     */
    public void setLocationId(Number value) {
        setAttributeInternal(LOCATIONID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getLocacionesEO() {
        return (EntityImpl)getAttributeInternal(LOCACIONESEO);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setLocacionesEO(EntityImpl value) {
        setAttributeInternal(LOCACIONESEO, value);
    }

    /**
     * @return the associated entity EmployeesEOImpl.
     */
    public EmployeesEOImpl getEmployeesEO() {
        return (EmployeesEOImpl)getAttributeInternal(EMPLOYEESEO);
    }

    /**
     * Sets <code>value</code> as the associated entity EmployeesEOImpl.
     */
    public void setEmployeesEO(EmployeesEOImpl value) {
        setAttributeInternal(EMPLOYEESEO, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getEmployeesEO1() {
        return (RowIterator)getAttributeInternal(EMPLOYEESEO1);
    }

    /**
     * @param departmentId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Long departmentId) {
        return new Key(new Object[]{departmentId});
    }

}
